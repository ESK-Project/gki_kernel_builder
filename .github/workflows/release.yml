name: Release Build
permissions:
  contents: write
  actions: write

on:
  workflow_dispatch: null

jobs:
  build:
    strategy:
      matrix:
        variant:
          - name: Non-KSU
            KSU: NONE
            SUSFS: "false"
            LXC: "false"
          - name: Non-KSU-LXC
            KSU: NONE
            SUSFS: "false"
            LXC: "true"
          - name: KSUN
            KSU: NEXT
            SUSFS: "false"
            LXC: "false"
          - name: KSUN-SUSFS
            KSU: NEXT
            SUSFS: "true"
            LXC: "false"
          - name: KSUN-LXC
            KSU: NEXT
            SUSFS: "false"
            LXC: "true"
          - name: KSUN-SUSFS-LXC
            KSU: NEXT
            SUSFS: "true"
            LXC: "true"
          - name: SUKISU
            KSU: SUKI
            SUSFS: "false"
            LXC: "false"
          - name: SUKISU-SUSFS
            KSU: SUKI
            SUSFS: "true"
            LXC: "false"
          - name: SUKISU-LXC
            KSU: SUKI
            SUSFS: "false"
            LXC: "true"
          - name: SUKISU-SUSFS-LXC
            KSU: SUKI
            SUSFS: "true"
            LXC: "true"
          - name: RKSU
            KSU: RKSU
            SUSFS: "false"
            LXC: "false"
          - name: RKSU-SUSFS
            KSU: RKSU
            SUSFS: "true"
            LXC: "false"
          - name: RKSU-LXC
            KSU: RKSU
            SUSFS: "false"
            LXC: "true"
          - name: RKSU-SUSFS-LXC
            KSU: RKSU
            SUSFS: "true"
            LXC: "true"
    name: Build ${{ matrix.variant.name }} variant
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      KSU: ${{ matrix.variant.KSU }}
      SUSFS: ${{ matrix.variant.SUSFS }}
      LXC: ${{ matrix.variant.LXC }}
      VERBOSE: "false"

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_files

      - name: Setup env
        run: |
          RELEASE_REPO="bachnxuan/android12-5.10-lts"
          BRANCH_TAG="android12-5.10-lts"

          echo "RELEASE_REPO=${RELEASE_REPO}" >> $GITHUB_ENV
          echo "BRANCH_TAG=${BRANCH_TAG}" >> $GITHUB_ENV

      - name: Generate new tag
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          RELEASE_REPO: ${{ env.RELEASE_REPO }}
        run: |
          LATEST_TAG=$(gh api repos/$RELEASE_REPO/tags \
           --header "Authorization: token $GH_TOKEN" \
           --jq '.[0].name')

          if [ -z "$LATEST_TAG" ]; then
            RELEASE_TAG="v1.0"
          else
            RELEASE_TAG=$(awk -F. '{ print $1 "." ($2 + 1) }' <<< "$LATEST_TAG")
          fi

          echo "New tag: $RELEASE_TAG"
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV

      - name: Upload builds to release
        uses: softprops/action-gh-release@v2
        with:
          repository: ${{ env.RELEASE_REPO }}
          name: ${{ env.RELEASE_TAG }}
          tag_name: ${{ env.RELEASE_TAG }}
          token: ${{ secrets.GH_TOKEN }}
          body: |
            ## ðŸ“¢ ESK KERNEL
          prerelease: true
          generate_release_notes: true
          target_commitish: ${{ env.BRANCH_TAG }}
          files: release_files/**/*
